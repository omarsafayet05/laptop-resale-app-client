export const data = [
  {
    question:
      "What are the different ways to manage a state in a React application?",
    answer:
      "In a React application, managing state effectively is crucial for maintaining the application’s performance and readability. There are several approaches to state management in React, each with its own advantages and use cases. Here are the most common ways:Local State Management (useState, useReducer):useState: This is the simplest way to manage state in a functional component. It's suitable for local component state.Custom Hooks:Custom hooks allow you to extract and reuse stateful logic across multiple components.State Management Libraries:Redux: A predictable state container for JavaScript apps, often used with React for managing global state.Recoil: A state management library for React that is more flexible and easier to use than Redux.Server State Management:React Query: Handles server state, caching, synchronization, and background updates.SWR: Another library for handling server state, providing data fetching, caching, and revalidation.Component State Management with third-party libraries:Libraries like zustand and Jotai offer simpler and lighter alternatives to Redux for state management.Each of these methods can be used independently or combined depending on the complexity and requirements of the application.",
  },
  {
    question: "How does prototypical inheritance work?",
    answer:
      "Prototype inheritance in javascript is the linking of prototypes of a parent object to a child object to share and utilize the properties of a parent class using a child class. Prototypes are hidden objects that are used to share the properties and methods of a parent class with child classes.",
  },
  {
    question: "What is a unit test? Why should we write unit tests?",
    answer:
      "A unit test is a block of code that verifies the accuracy of a smaller, isolated block of application code, typically a function or method.The main goal of unit testing is to ensure that each unit of the software performs as intended and meets requirements. Unit tests help make sure that software is working as expected before it is released. The main steps for carrying out unit tests are: Planning and setting up the environment.Unit testing is a crucial part of software development as it helps catch defects early in the process, reduce costs, improve code quality, and facilitate refactoring.",
  },
  {
    question: "React vs. Angular vs. Vue?",

    answer:
      "Angular vs React: If the choice you’re making is based on Angular vs React alone, then you’ll simply need to consider the pros and cons discussed for those libraries in this post. But overall, keep in mind that both libraries can be used for mobile and web apps, while Angular is generally better for more complex apps that are enterprise-ready.React often requires extra modules and components, which keeps the core library small, but means there’s extra work involved when incorporating outside tools. Angular, on the other hand, is more of a full-fledged solution that doesn’t require extras like React often does, though it does have a steeper learning curve for its core compared to React.React is more suitable for intermediate to advanced JavaScript developers who are familiar with concepts from ES6 and up, while Angular favors those same developers who are also familiar with TypeScript.React vs Vue:The choice between React vs Vue is often debated and it’s not an easy one. Vue has a vibrant and ever-growing community and has taken over popularity vs. React in many respects. React developers are still churning out lots of new components and extras, so there’s no sign that React is on the decline either.Vue is generally more suited to smaller, less complex apps and is easier to learn from scratch compared to React. Vue can be easier to integrate into new or existing projects and many feel its use of HTML templates along with JSX is an advantage.  Overall, Vue might be the best choice if you’re a newer developer and not as familiar with advanced JavaScript concepts, while React is quite well suited for experienced programmers and developers who have worked with object-oriented JavaScript, functional JavaScript, and similar concepts.Angular vs Vue: In most cases, you probably wouldn’t be deciding between only Angular and Vue. They are vastly different libraries with very different feature sets and learning curves. Vue is the clear choice for less experienced developers, and Angular would be preferred for those working on larger apps.A large library like Angular would require more diligence in keeping up with what’s new, while Vue would be less demanding in this regard and the fact that the two most recent major releases of Vue are in separate repositories helps. It should also be noted that Vue was created by a developer who formerly worked on Angular for Google, so that’s another thing to keep in mind, though that wouldn’t have a huge impact on your decision.",
  },
];
